package Easy;

import java.util.Stack;

public class AddTowNumbers {
	public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		Stack<Integer> st1 = new Stack<>();
		Stack<Integer> st2 = new Stack<>();
		while(l1!= null) {
			st1.add(l1.val);
			l1 = l1.next;
		}
		while(l2!= null) {
			st1.add(l2.val);
			l2 = l2.next;
		}
		
		ListNode rs = new ListNode((st1.pop() + st2.pop()) %10);
		int soDu = (st1.pop() + st2.pop()) / 10;
		ListNode current = rs;
		
		while(st1.size() != 0 || st2.size() != 0) {
			int n1 = st1.size() == 0 ? 0: st1.pop();
			int n2 = st2.size() == 0 ? 0: st2.pop();
			current.next = new ListNode((n1 + n2 + soDu)%10);
			soDu = (n1 + n2 + soDu)/10;
			current = current.next;
		}
		
		if(soDu > 0)
			current.next = new ListNode(soDu);
		
		return rs;
		
	}
}
